/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var objectKeys = require( '@stdlib/utils/keys' );
var extname = require( '@stdlib/utils/extname' );


// MAIN //

/**
* Resolves module aliases relative to a provided absolute directory path.
*
* @private
* @param {string} dir - absolute directory path
* @param {Object} aliases - object mapping module aliases
* @returns {Object} object containing resolved module aliases
*/
function resolveAliases( dir, aliases ) {
	var keys;
	var key;
	var out;
	var v;
	var i;

	// FIXME: this is likely to only work on POSIX systems; we need to normalize paths to POSIX paths...
	keys = objectKeys( aliases );
	out = {};
	for ( i = 0; i < keys.length; i++ ) {
		key = keys[ i ];
		v = resolve( dir, aliases[ key ] );
		if ( extname( v ) === '' ) {
			v += '/index.js';
		}
		out[ resolve( dir, key ) ] = v;
	}
	return out;
}


// EXPORTS //

module.exports = resolveAliases;
