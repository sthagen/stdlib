/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var logger = require( 'debug' );
var visit = require( 'unist-util-visit' );


// VARIABLES //

var debug = logger( 'remark-stdlib-urls-www:transformer' );
var RE_STDLIB = /^@stdlib\//;


// MAIN //

/**
* Returns a transformer function.
*
* @private
* @param {Options} opts - transformer options
* @param {string} opts.base - base path for internal URLs
* @returns {Function} transformer function
*/
function factory( opts ) {
	return transformer;

	/**
	* Transforms a Markdown abstract syntax tree (AST).
	*
	* @private
	* @param {Node} tree - root AST node
	* @param {File} file - virtual file
	*/
	function transformer( tree ) {
		debug( 'Processing virtual file...' );
		visit( tree, 'definition', visitor );

		/**
		* Callback invoked upon finding a matching node.
		*
		* @private
		* @param {Node} node - reference node
		*/
		function visitor( node ) {
			debug( 'Found a definition: %s', node.identifier );
			if ( RE_STDLIB.test( node.identifier ) ) {
				debug( 'Found a package identifier.' );

				debug( 'Current URL: %s', node.url );
				node.url = opts.base + node.identifier;

				debug( 'Resolved URL: %s', node.url );
			}
		}
	}
}


// EXPORTS //

module.exports = factory;
