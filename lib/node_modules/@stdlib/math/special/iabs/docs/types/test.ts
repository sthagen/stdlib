/*
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/// <reference types="@stdlib/types"/>

import { ndarray } from '@stdlib/types/ndarray';
import iabs = require( './index' );


// TESTS //

// The function returns an array-like object if provided an array-like object...
{
	const x = new Float64Array( 10 );

	iabs( x ); // $ExpectType ArrayLike<number>
}

// The function returns an ndarray if provided an ndarray...
{
	const buf = [ 1, 2, 3, 4 ];

	const x: ndarray = {
		'byteLength': null,
		'BYTES_PER_ELEMENT': null,
		'data': buf,
		'dtype': 'generic',
		'flags': {
			'ROW_MAJOR_CONTIGUOUS': true,
			'COLUMN_MAJOR_CONTIGUOUS': false
		},
		'length': 4,
		'ndims': 1,
		'offset': 0,
		'order': 'row-major',
		'shape': [ 4 ],
		'strides': [ 1 ],
		'get': ( i: number ): number => {
			return buf[ i ];
		},
		'set': ( i: number, v: number ): ndarray => {
			buf[ i ] = v;
			return x;
		}
	};

	iabs( x ); // $ExpectType ndarray
}

// The function does not compile if provided a value other than an ndarray or array-like object...
{
	iabs( '5' ); // $ExpectError
	iabs( 5 ); // $ExpectError
	iabs( true ); // $ExpectError
	iabs( false ); // $ExpectError
	iabs( null ); // $ExpectError
	iabs( undefined ); // $ExpectError
	iabs( {} ); // $ExpectError
	iabs( [ '5' ] ); // $ExpectError
	iabs( ( x: number ): number => x ); // $ExpectError
}

// The function does not compile if provided insufficient arguments...
{
	iabs(); // $ExpectError
}
