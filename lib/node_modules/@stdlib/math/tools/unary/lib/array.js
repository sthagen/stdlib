/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var dtype = require( '@stdlib/ndarray/base/buffer-dtype' );
var buffer = require( '@stdlib/ndarray/base/buffer' );
var resolve = require( './resolve.js' );


// MAIN //

/**
* Applies a function to an array-like object.
*
* @private
* @param {ArrayLikeObject} table - resolution table
* @param {Collection} x - input array
* @throws {TypeError} must provide an argument with a supported data type
* @returns {Collection} output array
*/
function arrayfcn( table, x ) {
	var dt;
	var N;
	var y;
	var f;

	dt = dtype( x ) || 'generic';

	// Attempt to resolve a type-specific implementation...
	f = resolve( table, dt );
	if ( f === null ) {
		// Fall back to resolving a "generic" interface:
		f = resolve( table, 'generic' );
		if ( f === null ) {
			throw new TypeError( 'invalid argument. Providing an array-like object is not supported.' );
		}
	}
	N = x.length;
	y = buffer( dt, N );
	f( N, x, 1, y, 1 );
	return y;
}


// EXPORTS //

module.exports = arrayfcn;
