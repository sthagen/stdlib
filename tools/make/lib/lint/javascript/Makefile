#/
# @license Apache-2.0
#
# Copyright (c) 2017 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# DEPENDENCIES #

# Note: keep in alphabetical order...
include $(TOOLS_MAKE_LIB_DIR)/lint/javascript/eslint.mk


# RULES #

#/
# Lints JavaScript files.
#
# ## Notes
#
# -   This rule supports the environment variables supported by each context-specific (`lint-javascript-<context>`) prerequisite.
# -   This rule is useful when wanting to glob for files, irrespective of context, for a particular package in order to lint all contained JavaScript files.
#
# @param {string} [SOURCES_FILTER] - file path pattern (e.g., `.*/blas/base/dasum/.*`)
# @param {string} [TESTS_FILTER] - file path pattern (e.g., `.*/blas/base/dasum/.*`)
# @param {string} [EXAMPLES_FILTER] - file path pattern (e.g., `.*/blas/base/dasum/.*`)
# @param {string} [BENCHMARKS_FILTER] - file path pattern (e.g., `.*/blas/base/dasum/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-javascript
#
# @example
# make lint-javascript SOURCES_FILTER=".*/blas/base/dasum/.*" TESTS_FILTER=".*/blas/base/dasum/.*" EXAMPLES_FILTER=".*/blas/base/dasum/.*" BENCHMARKS_FILTER=".*/blas/base/dasum/.*"
#/
lint-javascript: lint-javascript-src lint-javascript-tests lint-javascript-examples lint-javascript-benchmarks

.PHONY: lint-javascript

#/
# Lints JavaScript source files.
#
# ## Notes
#
# -   This rule is useful when wanting to glob for JavaScript source files (e.g., lint all JavaScript source files for a particular package).
#
# @param {string} [SOURCES_FILTER] - file path pattern (e.g., `.*/math/base/special/abs/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-javascript-src
#
# @example
# make lint-javascript-src SOURCES_FILTER=".*/math/base/special/abs/.*"
#/
lint-javascript-src:
ifeq ($(JAVASCRIPT_LINTER), eslint)
	$(QUIET) NODE_ENV="$(NODE_ENV)" NODE_PATH="$(NODE_PATH)" $(MAKE) -f $(this_file) eslint-src
endif

.PHONY: lint-javascript-src

#/
# Lints JavaScript test files.
#
# ## Notes
#
# -   This rule is useful when wanting to glob for JavaScript test files (e.g., lint all JavaScript test files for a particular package).
#
# @param {string} [TESTS_FILTER] - file path pattern (e.g., `.*/math/base/special/abs/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-javascript-tests
#
# @example
# make lint-javascript-tests TESTS_FILTER=".*/math/base/special/abs/.*"
#/
lint-javascript-tests:
ifeq ($(JAVASCRIPT_LINTER), eslint)
	$(QUIET) NODE_ENV="$(NODE_ENV)" NODE_PATH="$(NODE_PATH)" $(MAKE) -f $(this_file) eslint-tests
endif

.PHONY: lint-javascript-tests

#/
# Lints JavaScript examples files.
#
# ## Notes
#
# -   This rule is useful when wanting to glob for JavaScript examples files (e.g., lint all JavaScript examples files for a particular package).
#
# @param {string} [EXAMPLES_FILTER] - file path pattern (e.g., `.*/math/base/special/abs/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-javascript-examples
#
# @example
# make lint-javascript-examples EXAMPLES_FILTER=".*/math/base/special/abs/.*"
#/
lint-javascript-examples:
ifeq ($(JAVASCRIPT_LINTER), eslint)
	$(QUIET) NODE_ENV="$(NODE_ENV)" NODE_PATH="$(NODE_PATH)" $(MAKE) -f $(this_file) eslint-examples
endif

.PHONY: lint-javascript-examples

#/
# Lints JavaScript benchmark files.
#
# ## Notes
#
# -   This rule is useful when wanting to glob for JavaScript benchmark files (e.g., lint all JavaScript benchmark files for a particular package).
#
# @param {string} [BENCHMARKS_FILTER] - file path pattern (e.g., `.*/math/base/special/abs/.*`)
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-javascript-benchmarks
#
# @example
# make lint-javascript-benchmarks BENCHMARKS_FILTER=".*/math/base/special/abs/.*"
#/
lint-javascript-benchmarks:
ifeq ($(JAVASCRIPT_LINTER), eslint)
	$(QUIET) NODE_ENV="$(NODE_ENV)" NODE_PATH="$(NODE_PATH)" $(MAKE) -f $(this_file) eslint-benchmarks
endif

.PHONY: lint-javascript-benchmarks

#/
# Lints a specified list of JavaScript files.
#
# ## Notes
#
# -   This rule is useful when wanting to lint a list of JavaScript files generated by some other command (e.g., a list of changed JavaScript files obtained via `git diff`).
#
# @param {string} FILES - list of JavaScript file paths
# @param {*} [FAST_FAIL] - flag indicating whether to stop linting upon encountering a lint error
#
# @example
# make lint-javascript-files FILES='/foo/index.js /bar/index.js'
#/
lint-javascript-files:
ifeq ($(JAVASCRIPT_LINTER), eslint)
	$(QUIET) NODE_ENV="$(NODE_ENV)" NODE_PATH="$(NODE_PATH)" FILES="$(FILES)" $(MAKE) -f $(this_file) eslint-files
endif

.PHONY: lint-javascript-files
